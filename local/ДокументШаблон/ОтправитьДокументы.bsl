//Старая логика отправки

// Процедура формирует и отправляет пакеты документов по отмеченным строкам в реестре	
&НаКлиенте
Процедура ОтправитьДокументы(Кэш,МассивСтрок) Экспорт
	Перем РезультатОтправки;

	ГлавноеОкно		= Кэш.ГлавноеОкно;
	УжеАктивированы	= Новый СписокЗначений;
	ИННОтправителей	= Новый СписокЗначений;
	МассивПакетов	= Новый Массив;  // Массив пакетов для одной отправки (если в настройках указано отправлять пакеты по n штук)
	Кэш.СписокНоменклатуры.Очистить();
	ВремяНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Если	Не	Кэш.Свойство("РезультатОтправки", РезультатОтправки)
		Или	(		РезультатОтправки.Свойство("Новый")
			И Не	РезультатОтправки.Новый) Тогда
		РезультатОтправки = Новый Структура("ТипыОшибок,Отправлено,НеОтправлено,НеСформировано,Ошибок,ДетализацияОшибок,ВсегоПакетов,ОшибкиДоОтправки,ДанныеПоСтатусам,ПорНомер,КоличествоСвободныхПотоков,ОтправленоСообщений,ПолученоОтветов,ВремяНачала,ВремяФормирования,ВремяОтправки,ДетализацияОтправки,ВремяЗаписиСтатусов,ВремяПолученияДанных,ВремяОжиданияОтвета, СформированныеПакеты", Новый СписокЗначений,0,0,0,0, Новый Соответствие,0,0,Новый Массив,0,Кэш.КоличествоПотоковОтправки,0,0,ВремяНачала,0,0, Новый Соответствие,0,0,0, Новый Соответствие);
		РезультатОтправки.Вставить("НаЗаписьСтатусов", Новый Структура("Ошибки, Ответы", Новый Соответствие, Новый Соответствие));
		Кэш.Вставить("РезультатОтправки",РезультатОтправки);
	КонецЕсли;
	Кэш.РезультатОтправки.Вставить("Новый", Ложь);

	//Кэш.Интеграция.ЗакрытьСессию(Кэш);
	
	РезультатОтправки = ОтправитьДокументыПоМассивуСтрок(Кэш,МассивСтрок,0,МассивПакетов,ИННОтправителей, УжеАктивированы);
	Если ТипЗнч(РезультатОтправки) = Тип("Структура") Тогда  // если необходимо активировать сертификаты перед отправкой
		СчетчикВведенныхПинкодов = 0;
		счСертификатов = 0;
		Для Каждого Элемент Из РезультатОтправки.СписокСертификатов Цикл
			Сертификат = Элемент.Значение;
			Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
				Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
			КонецЕсли;
			СертификатИмя = "Введите код активации сертификата " + Кэш.ОбщиеФункции.ПолучитьПредставлениеСертификата(Сертификат, "[ФИО].([Должность])., [Название].(ИНН [ИНН])", Истина);
			ОткрытьФорму(Кэш.ГлавноеОкно.СбисПутьКФормамОбработки() + "ФормаВводаПинкода",Новый Структура("СертификатИмя,счСертификатов",СертификатИмя,счСертификатов),ЭтаФорма,счСертификатов,,,Новый ОписаниеОповещения("АктивироватьСертификатыЗавершение",ЭтаФорма,Новый Структура("Кэш,РезультатОтправки",Кэш,РезультатОтправки)));	
			счСертификатов = счСертификатов+1;
		КонецЦикла;
	КонецЕсли;
	сбисСпрятатьСостояние(ГлавноеОкно);
КонецПроцедуры

// Функция формирует и отправляет пакеты документов по отмеченным строкам в реестре, начиная с счСтрок	
&НаКлиенте
Функция ОтправитьДокументыПоМассивуСтрок(Кэш,МассивСтрок,счСтрок,МассивПакетов,ИННОтправителей, УжеАктивированы) Экспорт
	Перем МассивПодготовленныхПакетов;
	
	ГлавноеОкно = Кэш.ГлавноеОкно;
	
	//ПолныйМассивПакетов = Новый Массив;  // Полный массив пакетов для отправки
	Всего = МассивСтрок.Количество();
	ПоследняяПартия = Ложь;
	
	ПодключитьОбработчикОжидания("ПрерываниеПользователемФормированияДокументов",0.1,Истина);
	Пока счСтрок<Всего Цикл //Отправляемые пакеты
		Строка = МассивСтрок[счСтрок];
		Если Не ТипЗнч(МассивСтрок) = Тип("Массив") Тогда
			Строка = Строка.Значение;
		КонецЕсли;
		Если Кэш.Свойство("ПрерватьОтправку") и Кэш.ПрерватьОтправку = Истина Тогда
			Прервать;
		КонецЕсли;
		счСтрок = счСтрок+1;
		Если счСтрок = Всего Тогда
			ПоследняяПартия = Истина;
		КонецЕсли;  
		
		Если Не Строка.Свойство("МассивПодготовленныхПакетов", МассивПодготовленныхПакетов) Тогда
			
			сбисПоказатьСостояние("Формирование электронных документов",ГлавноеОкно,Мин(100,Окр(счСтрок*100/Всего)));
			ДатаНач = ТекущаяУниверсальнаяДатаВМиллисекундах();
			МассивПодготовленныхПакетов = Кэш.Текущий.Форма.ПодготовитьСтруктуруДокумента(Строка, Кэш);
			ДатаКнц = ТекущаяУниверсальнаяДатаВМиллисекундах();
			Кэш.РезультатОтправки.ВремяФормирования = Кэш.РезультатОтправки.ВремяФормирования+(ДатаКнц-ДатаНач)/1000;
			
		КонецЕсли;
		РезультатОтправки = ОтправитьПодготовленныеДокументы(Кэш, МассивПодготовленныхПакетов,0,МассивСтрок,счСтрок, МассивПакетов, ИННОтправителей, УжеАктивированы, ПоследняяПартия);
		Если РезультатОтправки = Ложь Тогда
			сбисСпрятатьСостояние(ГлавноеОкно);
			Возврат Ложь;
		КонецЕсли;
		Если ТипЗнч(РезультатОтправки) = Тип("Структура") Тогда
			Возврат РезультатОтправки;
		КонецЕсли;
		
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	ОтключитьОбработчикОжидания("ПрерываниеПользователемФормированияДокументов");
	сбисСпрятатьСостояние(ГлавноеОкно);
КонецФункции

// Функция отправляет подготовленные пакеты документов. Вызывается из форм просмотра, пересылки и отправки корреспонденции
&НаКлиенте
Функция ОтправитьПодготовленныеПакетыДокументы(Кэш, МассивПодготовленныхПакетов) Экспорт
	УжеАктивированы = Новый СписокЗначений;
	ИННОтправителей = Новый СписокЗначений;
	МассивПакетов = Новый Массив;
	ПоследняяПартия = Истина;
	РезультатОтправки = ОтправитьПодготовленныеДокументы(Кэш, МассивПодготовленныхПакетов,0,Новый Массив,0, МассивПакетов, ИННОтправителей, УжеАктивированы, ПоследняяПартия);
	Если ТипЗнч(РезультатОтправки) = Тип("Структура") Тогда  // если необходимо активировать сертификаты перед отправкой
		СчетчикВведенныхПинкодов = 0;
		счСертификатов = 0;
		Для Каждого Элемент Из РезультатОтправки.СписокСертификатов Цикл
			Сертификат = Элемент.Значение;
			Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
				Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
			КонецЕсли;
			СертификатИмя = "Введите код активации сертификата "+Кэш.ОбщиеФункции.СокращенноеФИО(Кэш,Сертификат.ФИО)+?(Сертификат.Свойство("Должность"),"("+Сертификат.Должность+")", "")+", "+Сертификат.Название+?(Сертификат.Свойство("ИНН"),"(ИНН "+Сертификат.ИНН+")","");
			ОткрытьФорму(Кэш.ГлавноеОкно.СбисПутьКФормамОбработки() + "ФормаВводаПинкода",Новый Структура("СертификатИмя,счСертификатов",СертификатИмя,счСертификатов),ЭтаФорма,,,,Новый ОписаниеОповещения("АктивироватьСертификатыЗавершение",ЭтаФорма,Новый Структура("Кэш,РезультатОтправки",Кэш,РезультатОтправки)));	
			счСертификатов = счСертификатов+1;
		КонецЦикла;
	КонецЕсли;	
КонецФункции

// Функция отправляет подготовленный пакеты. 	
&НаКлиенте
Функция ОтправитьПодготовленныеДокументы(Кэш, МассивПодготовленныхПакетов,счПодготовленныхПакетов,МассивСтрок,счСтрок, МассивПакетов, ИННОтправителей, УжеАктивированы, ПоследняяПартия) Экспорт
	Если Кэш.РезультатОтправки.Свойство("ПрерватьОтправку") и Кэш.РезультатОтправки.ПрерватьОтправку<>Истина Тогда    // при отправке были проблемы со связью
		Сообщить("Отправка была прервана."+Символы.ПС + Кэш.РезультатОтправки.ПрерватьОтправку );
		Кэш.ФормаОтправки.сбисПолучитьОтветыПоОтправке(Кэш);
		Кэш.ГлавноеОкно.ОбновитьКонтент();
		
		Возврат Ложь;
	КонецЕсли;
	
	КолПакетов = МассивПодготовленныхПакетов.Количество();
	Пока счПодготовленныхПакетов<КолПакетов Цикл
		Пакет = МассивПодготовленныхПакетов[счПодготовленныхПакетов];
					
		счПодготовленныхПакетов = счПодготовленныхПакетов+1;
		ПолныйСоставПакета = Пакет;
		
		//++ Бухов А. Точка входа при отправке пакетов документов
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияПакетаДокументов","Документ_"+Кэш.Текущий.ТипДок,"Документ_Шаблон", Кэш);
		Если фрм<>Ложь Тогда
			ПолныйСоставПакета = фрм.сбисПослеФормированияПакетаДокументов(ПолныйСоставПакета, Кэш);	
		КонецЕсли;
		//-- Бухов А. Точка входа при отправке пакетов документов
		
		Если ПолныйСоставПакета.Свойство("Ошибка") Тогда
			Кэш.РезультатОтправки.ОшибкиДоОтправки = Кэш.РезультатОтправки.ОшибкиДоОтправки + 1;
			Если ПолныйСоставПакета.Свойство("Вложение") и ПолныйСоставПакета.Вложение.Количество()>0 и ПолныйСоставПакета.Вложение[0].Свойство("Документы1С") Тогда
				ОсновнойДокумент1С = ПолныйСоставПакета.Вложение[0].Документы1С[0].Значение;
			Иначе
				ОсновнойДокумент1С = Неопределено;
			КонецЕсли;
			Кэш.ОбщиеФункции.ДобавитьОшибкуВРезультатОтправки(Кэш, ПолныйСоставПакета.Ошибка.message, ПолныйСоставПакета.Ошибка.details, ОсновнойДокумент1С);
		Иначе
			ИННОтправителя = ?(ПолныйСоставПакета.НашаОрганизация.Свойство("СвФЛ"),ПолныйСоставПакета.НашаОрганизация.СвФЛ.ИНН,ПолныйСоставПакета.НашаОрганизация.СвЮЛ.ИНН);
			Если ИННОтправителей.НайтиПоЗначению(ИННОтправителя)=Неопределено и УжеАктивированы.НайтиПоЗначению(ИННОтправителя)=Неопределено Тогда 
				ИННОтправителей.Добавить(ИННОтправителя);
			КонецЕсли;
			Если ПолныйСоставПакета.Свойство("Вложение") Тогда
				МассивПакетов.Добавить(ПолныйСоставПакета);
				Если МассивПакетов.Количество() = Кэш.КоличествоВОтправке Тогда
					// если надо активировать сертификаты
					Если ИННОтправителей.Количество()>0 Тогда
						СписокСертификатов = Кэш.Интеграция.ПолучитьСертификатыДляАктивации(Кэш, ИННОтправителей);
						Если СписокСертификатов.Количество()>0 Тогда
							Возврат Новый Структура("МассивПакетов, СписокСертификатов, МассивПодготовленныхПакетов, счПодготовленныхПакетов,МассивСтрок,счСтрок, ИННОтправителей, УжеАктивированы, ПоследняяПартия", МассивПакетов, СписокСертификатов, МассивПодготовленныхПакетов, счПодготовленныхПакетов,МассивСтрок,счСтрок, ИННОтправителей, УжеАктивированы, ПоследняяПартия);
						КонецЕсли;
						Для Каждого Элемент Из ИННОтправителей Цикл
							УжеАктивированы.Добавить(Элемент.Значение);
						КонецЦикла;
						ИННОтправителей.Очистить();
					КонецЕсли;
					// если ничего не надо активировать, то отправляем партию пакетов
					ОтправитьПартиюПакетов(Кэш, МассивПакетов);
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ПоследняяПартия Тогда
		
		Если ИННОтправителей.Количество()>0 Тогда
			СписокСертификатов = Кэш.Интеграция.ПолучитьСертификатыДляАктивации(Кэш, ИННОтправителей);
			Если СписокСертификатов.Количество()>0 Тогда
				Возврат Новый Структура("МассивПакетов, СписокСертификатов, МассивПодготовленныхПакетов, счПодготовленныхПакетов,МассивСтрок,счСтрок, ИННОтправителей, УжеАктивированы, ПоследняяПартия", МассивПакетов, СписокСертификатов, МассивПодготовленныхПакетов, счПодготовленныхПакетов,МассивСтрок,счСтрок, ИННОтправителей, УжеАктивированы, ПоследняяПартия);
			КонецЕсли;
			Для Каждого Элемент Из ИННОтправителей Цикл
				УжеАктивированы.Добавить(Элемент.Значение);
			КонецЦикла;
			ИННОтправителей.Очистить();
		КонецЕсли;
		
		ОтправитьПартиюПакетов(Кэш, МассивПакетов);
		
		Кэш.ФормаОтправки.сбисПолучитьОтветыПоОтправке(Кэш);
		Кэш.РезультатОтправки.НеОтправлено = Кэш.РезультатОтправки.ВсегоПакетов-Кэш.РезультатОтправки.Отправлено+Кэш.РезультатОтправки.ОшибкиДоОтправки;
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеОтправкиПакетов","РаботаСДокументами1С","", Кэш);
		Если фрм<>Ложь Тогда
			фрм.сбисПослеОтправкиПакетов(Кэш);	
		КонецЕсли;
		Если Не Кэш.ТихийРежим Тогда
			Если		Кэш.РезультатОтправки.Свойство("ОбработчикРезультата")
				И	Не	Кэш.РезультатОтправки.ОбработчикРезультата = Неопределено Тогда
				ОбработчикРезультат = Кэш.РезультатОтправки.ОбработчикРезультата;
				Кэш.РезультатОтправки.Удалить("ОбработчикРезультата");
				МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(Кэш.РезультатОтправки, ОбработчикРезультат);
			ИначеЕсли	Кэш.РезультатОтправки.Свойство("ФормаОтправки") Тогда
				Кэш.ГлавноеОкно.сбисПолучитьФорму(Кэш.РезультатОтправки.ФормаОтправки).ПослеОтправки(Кэш);
			Иначе
				фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьРезультатОтправки","ФормаРезультатОтправки","", Кэш);
				фрм.ПоказатьРезультатОтправки(Кэш);
				Если Кэш.РезультатОтправки.Свойство("ОтправкаИзПересылки") Тогда
					сбисПолучитьФорму("ФормаПересылкаПакетов").ПослеОтправки(Кэш);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции

// Функция выполняет отправку партии подготовленных пакетов документов через форму интеграции. Так же отправляет каталог номенклатуры.
&НаКлиенте
Функция ОтправитьПартиюПакетов(Кэш, МассивПакетов) Экспорт
	Кэш.ФормаОтправки.ОтправитьПакетыДокументов(Кэш, МассивПакетов);
	Если Кэш.РезультатОтправки.Свойство("ПереотправитьПартию") Тогда
		МассивНеотправленныхПакетов = Новый Массив;
		Для Каждого Пакет Из МассивПакетов Цикл
			Если НЕ Пакет.Свойство("Отправлен") Тогда
				МассивНеотправленныхПакетов.Добавить(Пакет);
			КонецЕсли;
		КонецЦикла;
		Кэш.ФормаОтправки.ОтправитьПакетыДокументов(Кэш, МассивНеотправленныхПакетов);
		Кэш.РезультатОтправки.Удалить("ПереотправитьПартию");
	КонецЕсли;
	Кэш.РезультатОтправки.ВсегоПакетов = Кэш.РезультатОтправки.ВсегоПакетов+МассивПакетов.Количество();
	МассивПакетов.Очистить();
	СтруктураИниФайла = Кэш.Ини;
	//Если	Кэш.Парам.ОтправлятьНоменклатуруСДокументами = Истина
	//	И	СтруктураИниФайла.Свойство("Номенклатура",СтруктураИниФайла)
	//	И	СтруктураИниФайла.Свойство("мФайл",СтруктураИниФайла)
	//	И	СтруктураИниФайла.Свойство("Номенклатура",СтруктураИниФайла) Тогда
	//	ИниНоменклатура = Новый Структура;
	//	Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ИниНоменклатура, СтруктураИниФайла);
	//	КаталогОтправлен = Кэш.ОбщиеФункции.сбисСформироватьОтправитьКаталогТоваров(Кэш, Новый Структура("СписокНоменклатуры, Организация",Кэш.СписокНоменклатуры),ИниНоменклатура,Новый Структура("РеквизитСопоставленияНоменклатуры", Кэш.КэшЗначенийИни.РеквизитСопоставленияНоменклатуры));
	//	Кэш.СписокНоменклатуры.Очистить();
	//КонецЕсли;
КонецФункции

// Функция вызывается после ввода пин-кода (если требовалось активировать серверные сертификаты). 
// Отправляет сформированную партию пакетов и если есть еще несформированные, вызывает дальнейшее формирование.
&НаКлиенте
Функция АктивироватьСертификатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Кэш = ДополнительныеПараметры.Кэш;
	РезультатОтправки = ДополнительныеПараметры.РезультатОтправки;
	Если Результат = Неопределено Тогда   // не ввели пин-код
		ТекстОшибки = "Не активирован сертификат для подписания документов.";
		Сообщить(ТекстОшибки);
		//ЭлементСписка = Кэш.РезультатОтправки.ТипыОшибок.НайтиПоЗначению(ТекстОшибки);
		//Если ЭлементСписка=Неопределено Тогда
		//	Кэш.РезультатОтправки.ТипыОшибок.Добавить(ТекстОшибки, КоличествоПакетов);
		//Иначе
		//	ЭлементСписка.Представление = Число(ЭлементСписка.Представление)+КоличествоПакетов;
		//КонецЕсли;
		сбисСпрятатьСостояние(Кэш.ГлавноеОкно);
		Возврат Ложь;
	Иначе
		ТекущийСертификат = РезультатОтправки.СписокСертификатов[Результат.счСертификатов].Значение;
		ТекущийСертификат.Вставить("КодАктивации",Результат.ПинКод);
		СчетчикВведенныхПинкодов = СчетчикВведенныхПинкодов+1;
		Если СчетчикВведенныхПинкодов = РезультатОтправки.СписокСертификатов.Количество() Тогда   // если ввели все пин-коды
			Если Кэш.Интеграция.АктивироватьСерверныеСертификаты(Кэш, РезультатОтправки.СписокСертификатов) = Ложь Тогда
				Возврат Ложь;
			КонецЕсли;
			Для Каждого Элемент Из РезультатОтправки.ИННОтправителей Цикл
				РезультатОтправки.УжеАктивированы.Добавить(Элемент.Значение);
			КонецЦикла;
			ИННОтправителей = Новый СписокЗначений;
			ОтправитьПартиюПакетов(Кэш, РезультатОтправки.МассивПакетов); // отправляем уже готовую партию
			МассивПакетов = Новый Массив;
			// отправляем остальные подготовленные пакеты (или выводим результат, если уже все отправили)
			ПромежуточныйРезультатОтправки = ОтправитьПодготовленныеДокументы(Кэш, РезультатОтправки.МассивПодготовленныхПакетов,РезультатОтправки.счПодготовленныхПакетов,РезультатОтправки.МассивСтрок,РезультатОтправки.счСтрок, МассивПакетов, ИННОтправителей, РезультатОтправки.УжеАктивированы, РезультатОтправки.ПоследняяПартия);	
			Если ТипЗнч(ПромежуточныйРезультатОтправки) = Тип("Структура") Тогда
				СчетчикВведенныхПинкодов = 0;
				счСертификатов = 0;
				Для Каждого Элемент Из ПромежуточныйРезультатОтправки.СписокСертификатов Цикл
					Сертификат = Элемент.Значение;
					Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
						Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
					КонецЕсли;
					СертификатИмя = "Введите код активации сертификата "+Кэш.ОбщиеФункции.СокращенноеФИО(Кэш,Сертификат.ФИО)+?(Сертификат.Свойство("Должность"),"("+Сертификат.Должность+")", "")+", "+Сертификат.Название+?(Сертификат.Свойство("ИНН"),"(ИНН "+Сертификат.ИНН+")","");
					ОткрытьФорму(Кэш.ГлавноеОкно.СбисПутьКФормамОбработки() + "ФормаВводаПинкода",Новый Структура("СертификатИмя,счСертификатов",СертификатИмя,счСертификатов),ЭтаФорма,,,,Новый ОписаниеОповещения("АктивироватьСертификатыЗавершение",ЭтаФорма,Новый Структура("Кэш,РезультатОтправки",Кэш,ПромежуточныйРезультатОтправки)));	
					счСертификатов = счСертификатов+1;
				КонецЦикла;
				Возврат Истина;
			КонецЕсли;
			//Формируем остальные пакеты и отправляем их
			Если РезультатОтправки.Свойство("счСтрок") и РезультатОтправки.счСтрок<РезультатОтправки.МассивСтрок.Количество() Тогда
				РезультатОтправки = ОтправитьДокументыПоМассивуСтрок(Кэш,РезультатОтправки.МассивСтрок,РезультатОтправки.счСтрок,МассивПакетов, ИННОтправителей, РезультатОтправки.УжеАктивированы);
				Если ТипЗнч(РезультатОтправки) = Тип("Структура") Тогда
					СчетчикВведенныхПинкодов = 0;
					счСертификатов = 0;
					Для Каждого Элемент Из РезультатОтправки.СписокСертификатов Цикл
						Сертификат = Элемент.Значение;
						Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
							Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
						КонецЕсли;
						СертификатИмя = "Введите код активации сертификата "+Кэш.ОбщиеФункции.СокращенноеФИО(Кэш,Сертификат.ФИО)+?(Сертификат.Свойство("Должность"),"("+Сертификат.Должность+")", "")+", "+Сертификат.Название+?(Сертификат.Свойство("ИНН"),"(ИНН "+Сертификат.ИНН+")","");
						ОткрытьФорму(Кэш.ГлавноеОкно.СбисПутьКФормамОбработки() + "ФормаВводаПинкода",Новый Структура("СертификатИмя,счСертификатов",СертификатИмя,счСертификатов),ЭтаФорма,,,,Новый ОписаниеОповещения("АктивироватьСертификатыЗавершение",ЭтаФорма,Новый Структура("Кэш,РезультатОтправки",Кэш,РезультатОтправки)));	
						счСертификатов = счСертификатов+1;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецФункции

