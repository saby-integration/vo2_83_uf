
//см. include_core_vo2_ОбщиеФункции_ExtSysException
//TODO Объединить сборку 

//ExtSysException
//БазоваяОшибка - пробрасываемая ошибка, code, message, details, dump
Функция СбисИсключение(	БазоваяОшибка=Неопределено, СбисИмяКоманды,
	СбисКод=Неопределено, СбисСообщение=Неопределено, СбисДетализация=Неопределено, СбисДамп=Неопределено) Экспорт
	Перем СбисСтек,СбисОсновнаяОшибка,СтрокаРазбора;
	СбисИсключение = Новый Структура("code, message, details, methodName, dump, base", СбисКод, СбисСообщение, СбисДетализация, СбисИмяКоманды, СбисДамп);
	
	Если ТипЗнч(БазоваяОшибка) = Тип("Строка") Тогда
		//Конструктор из строки
		СбисОсновнаяОшибка = Новый Структура("code,message,details,methodName,dump");
		Если Лев(СбисОсновнаяОшибка,1) = "{" Тогда
			СтрокаРазбора = БазоваяОшибка;
		ИначеЕсли	Лев(СбисОсновнаяОшибка,35) = "callBLObject(): Метод бизнес логики"
			И		Найти(СбисОсновнаяОшибка,"вернул ошибку") Тогда
			СтрокаРазбора = Сред(БазоваяОшибка, Найти(БазоваяОшибка,"{"));
			СтрокаРазбора = Лев(СтрокаРазбора, СтрДлина(СтрокаРазбора)-1);
		ИначеЕсли Найти(БазоваяОшибка,"{""jsonrpc"":") Тогда
			СтрокаРазбора = Сред(БазоваяОшибка, Найти(БазоваяОшибка,"{""jsonrpc"":"));
		Иначе
			СбисОсновнаяОшибка.code	= 100;
			СбисОсновнаяОшибка.message	= БазоваяОшибка;
			СбисОсновнаяОшибка.details	= БазоваяОшибка;
		КонецЕсли;	
		Если Не СтрокаРазбора = Неопределено Тогда
			Попытка
				СбисОсновнаяОшибка = СбисПрочитатьJSON(СтрокаРазбора);
				Если СбисОсновнаяОшибка.Свойство("Error") Тогда
					СбисОсновнаяОшибка = СбисОсновнаяОшибка.Error;
				КонецЕсли;
			Исключение
				СбисОсновнаяОшибка.code	= 100;
				СбисОсновнаяОшибка.message	= БазоваяОшибка;
				СбисОсновнаяОшибка.details	= БазоваяОшибка;
			КонецПопытки;
		КонецЕсли;
	ИначеЕсли ТипЗнч(БазоваяОшибка) = Тип("Число") Тогда
		СбисОсновнаяОшибка = Новый Структура("code,message,details", БазоваяОшибка, СбисИсключение_СообщениеПоКоду(БазоваяОшибка), СбисИсключение_СообщениеПоКоду(БазоваяОшибка));
	Иначе
		СбисОсновнаяОшибка = БазоваяОшибка;
	КонецЕсли;
	
	//Если не указаны основные поля для новой ошибки
	Если СбисИсключение.code = Неопределено Тогда
		Если СбисОсновнаяОшибка = Неопределено Тогда
			СбисИсключение.code = 100;
		Иначе
			СбисИсключение.code = СбисОсновнаяОшибка.code;
		КонецЕсли;
	КонецЕсли;
	Если СбисИсключение.message = Неопределено Тогда
		Если		СбисОсновнаяОшибка = Неопределено
			Или	Не	СбисОсновнаяОшибка.Свойство("message", СбисИсключение.message) Тогда
			СбисИсключение.message = СбисИсключение_СообщениеПоКоду(СбисИсключение.code);
		КонецЕсли;
	КонецЕсли;
	Если СбисИсключение.details = Неопределено Тогда
		Если СбисОсновнаяОшибка = Неопределено Тогда
			СбисИсключение.details = СбисИсключение.message;
		ИначеЕсли СбисОсновнаяОшибка.Свойство("details") Тогда
			СбисИсключение.details = СбисОсновнаяОшибка.details;
		Иначе
			СбисИсключение.details = СбисОсновнаяОшибка.detail;
		КонецЕсли;
	КонецЕсли;
	
	Если СбисОсновнаяОшибка = Неопределено Тогда
		Возврат СбисИсключение;
	ИначеЕсли Не СбисОсновнаяОшибка.Свойство("base", СбисИсключение.base) Тогда
		СбисИсключение.base = СбисОсновнаяОшибка;
	КонецЕсли;
	//Добавим основную ошибку в стек
	Если СбисОсновнаяОшибка.Свойство("stack", СбисСтек) Тогда
		СбисОсновнаяОшибка.Удалить("stack");
	Иначе
		СбисСтек = Новый Массив;
		СбисЗаписьВСтек = Новый Структура("methodName, code, message, dump");
		ЗаполнитьЗначенияСвойств(СбисЗаписьВСтек, СбисОсновнаяОшибка);
		СбисСтек.Добавить(СбисЗаписьВСтек);
	КонецЕсли;
	//Добавим обрабатываемую ошибку в стек
	СбисЗаписьВСтек = Новый Структура("methodName, code, message, dump");
	ЗаполнитьЗначенияСвойств(СбисЗаписьВСтек, СбисИсключение);
	СбисСтек.Вставить(0, СбисЗаписьВСтек);
	СбисИсключение.Вставить("stack", СбисСтек);
	Если СбисОсновнаяОшибка.Свойство("data") Тогда
		СбисИсключение.Вставить("data", СбисОсновнаяОшибка.data);
	КонецЕсли;
	//пробросим дамп в основную ошибку, чтоб не потерять
	Если СбисДамп = Неопределено Тогда
		Если СбисОсновнаяОшибка.Свойство("dump", СбисИсключение.dump) Тогда
			СбисОсновнаяОшибка.Удалить("dump");
		КонецЕсли;
	КонецЕсли;
	Возврат СбисИсключение;
	
КонецФункции

