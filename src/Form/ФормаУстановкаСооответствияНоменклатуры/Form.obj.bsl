&НаКлиенте
Перем МестныйКэш Экспорт;

&НаСервере
Функция МодульОбъектаСервер()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаКлиенте
Функция МодульОбъектаКлиент() Экспорт
	Возврат ВладелецФормы.Кэш.СБИС.МодульОбъектаКлиент;
КонецФункции


// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции

&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция Показать(Кэш ,ПараметрыФормы) Экспорт
	МестныйКэш  = Кэш;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Попытка
			//Симонов И.В. 19.07.17 +				
			сбисУстановитьТипНоменклауры(Кэш.Ини.Конфигурация,Кэш,ЭтаФорма,ЭлементыФормы);
			//Симонов И.В. 19.07.17 -
			сбисУстановитьТипХарактеристики(Кэш.Ини.Конфигурация,Кэш,ЭтаФорма,ЭлементыФормы);
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		ЭлементыФормы.ТабличнаяЧасть.Колонки.Характеристика.Видимость=Ложь;
	#Иначе
		Попытка
			Если Кэш.Ини.Конфигурация.Свойство("Номенклатура") Тогда
				ИмяСправочникаНоменклатуры = СокрЛП(Сред(Кэш.Ини.Конфигурация.Номенклатура.Значение, Найти(Кэш.Ини.Конфигурация.Номенклатура.Значение, ".")+1));
				ТипСправочникаНоменклатуры = "СправочникСсылка."+ИмяСправочникаНоменклатуры;
			Иначе
				ТипСправочникаНоменклатуры = "СправочникСсылка.Номенклатура";
			КонецЕсли;
			ЭтаФорма.Элементы.СписокНоменклатурыНоменклатура.ОграничениеТипа = Новый ОписаниеТипов(ТипСправочникаНоменклатуры);
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		Попытка
			Если Кэш.Ини.Конфигурация.Свойство("ЕдиницаИзмерения") Тогда
				ИмяСправочникаЕдиницаИзмерения = СокрЛП(Сред(Кэш.Ини.Конфигурация.ЕдиницаИзмерения.Значение, Найти(Кэш.Ини.Конфигурация.ЕдиницаИзмерения.Значение, ".")+1));
				ТипСправочникаЕдиницаИзмерения = "СправочникСсылка."+ИмяСправочникаЕдиницаИзмерения;
			Иначе
				ТипСправочникаЕдиницаИзмерения = "СправочникСсылка.КлассификаторЕдиницИзмерения";
			КонецЕсли;
			ЭтаФорма.Элементы.ЕдиницыИзмерения1ССсылка.ОграничениеТипа = Новый ОписаниеТипов(ТипСправочникаЕдиницаИзмерения);
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
		//ЭтаФорма.Элементы.СписокНоменклатурыХарактеристикаНоменклатуры.Видимость=Ложь;
		Если Кэш.Ини.Конфигурация.Свойство("ИмяОтбораХарактеристики") Тогда
			ИмяОтбораХарактеристики = СокрЛП(СтрЗаменить(Кэш.Ини.Конфигурация.ИмяОтбораХарактеристики.Значение,"'", ""));
		Иначе
			ИмяОтбораХарактеристики = "Номенклатура";
		КонецЕсли;
	#КонецЕсли
	
	
	Контрагент1С = ПараметрыФормы.Контрагент;
	
	СписокНоменклатуры.Очистить();
	ЕдиницыИзмеренияСБИС.Очистить();
	ЕдиницыИзмерения1С.Очистить();
	Наименование	= ""; 
	КодКонтрагента	= "";
	СопоставлениеНоменклатуры = Неопределено;
	
	Если ПараметрыФормы.Свойство("СопоставлениеНоменклатуры") Тогда
		//Экземпляр класса 
		СопоставлениеНоменклатуры = ПараметрыФормы.СопоставлениеНоменклатуры;
		
		Наименование	= СопоставлениеНоменклатуры.НоменклатураСБИС.Наименование;
		КодКонтрагента	= СопоставлениеНоменклатуры.НоменклатураСБИС.Код;

		Для Каждого Номенклатура1С Из СопоставлениеНоменклатуры.Номенклатура1С Цикл
			
			Если Номенклатура1С.Значение.Характеристики.Количество() Тогда
				
				Для Каждого Характеристика Из Номенклатура1С.Значение.Характеристики Цикл
					
					СтрокаСписка 							= СписокНоменклатуры.Добавить();
					СтрокаСписка.Номенклатура				= Номенклатура1С.Ключ;
					СтрокаСписка.ХарактеристикаНоменклатуры = Характеристика;
					
				КонецЦикла;
				
			Иначе
				
				СтрокаСписка = СписокНоменклатуры.Добавить();
				СтрокаСписка.Номенклатура = Номенклатура1С.Ключ;
				
			КонецЕсли;
			
			Для Каждого Единица Из Номенклатура1С.Значение.Единицы Цикл
				
				ДанныеЕдиницы = ЕдиницыИзмерения1С.Добавить();
				ЗаполнитьЗначенияСвойств(ДанныеЕдиницы,Единица.Значение);			
				ДанныеЕдиницы.Записана = Истина;
			КонецЦикла;
			
		КонецЦикла;
		
		Для Каждого ЕдиницаСБИС Из ПараметрыФормы.СопоставлениеНоменклатуры.НоменклатураСБИС.Единицы Цикл
			  
			ДанныеЕдиницы = ЕдиницыИзмеренияСБИС.Добавить();
			ЗаполнитьЗначенияСвойств(ДанныеЕдиницы,ЕдиницаСБИС.Значение);
			ДанныеЕдиницы.Записана = Истина;
					
		КонецЦикла;
	
		ЗаполнитьАртикулКод();
	КонецЕсли;
	
	Если Не ЭтаФорма.Открыта() Тогда
		ЭтаФорма.Открыть();
	КонецЕсли;
	
КонецФункции	

Процедура ЗаполнитьАртикулКод()
	Для Каждого СтрокаСписка Из СписокНоменклатуры Цикл
		СтрокаСписка.Артикул = СтрокаСписка.Номенклатура.Артикул;
		СтрокаСписка.Код = СтрокаСписка.Номенклатура.Код;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	//Если Поле.Имя = "СписокНоменклатурыПересчет" Тогда
	//	
	//	СтандартнаяОбработка = Ложь;
	//	
	//	ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	//	
	//	ПараметрыФормы = Новый Структура;
	//			
	//	ПараметрыФормы.Вставить("ЕдиницаEDI"					, ТекущаяСтрока.ЕдиницаEDI);
	//	ПараметрыФормы.Вставить("ЕдиницаИзмерения"				, ТекущаяСтрока.ЕдиницаИзмерения);
	//	ПараметрыФормы.Вставить("КоэффициентEDIВ1С"				, ТекущаяСтрока.КоэффициентEDIВ1С);
	//	
	//	ДополнительныеПараметры = Новый Структура("ТекущаяСтрока", ТекущаяСтрока);
	//	
	//	ФормаУстановкаСооответствия = сбисПолучитьФорму("ФормаПересчетаЕдиницEDI_В_1С");		
	//	ФормаУстановкаСооответствия.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработчикПослеВведенияПересчета",ЭтаФорма,ДополнительныеПараметры);
	//    ФормаУстановкаСооответствия.Показать(ПараметрыФормы);		
	//	
	//	
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеВведенияПересчета(Результат, ДопПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		ВыбраннаяСтрока = ДопПараметры.ТекущаяСтрока;
		
		ВыбраннаяСтрока.КоэффициентEDIВ1С	= Результат.КоэффициентEDIВ1С;
		  		
        УстановитьТекстПересчета();
		
	КонецЕсли;	

КонецПроцедуры        

&НаКлиенте
Процедура КоманднаяПанельСоответствующейНоменклатурыУдалить(Команда)
	
	Если Элементы.СписокНоменклатуры.ТекущиеДанные<>Неопределено Тогда 
		СписокНоменклатуры.Удалить(Элементы.СписокНоменклатуры.ТекущиеДанные);
	Иначе
		Сообщить("Выберите строку соответствия для удаления");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыЕдиницаИзмеренияПриИзменении(Элемент)
	//ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	//ТекущаяСтрока.КоэффициентEDIВ1С	= 1;
	//УстановитьТекстПересчета();
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыХарактеристикаНоменклатурыНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если Не ЗначениеЗаполнено(сбисЭлементФормы(ЭтаФорма,"СписокНоменклатуры").ТекущиеДанные.Номенклатура) Тогда
		Сообщить("Заполните номенклатуру");
	КонецЕсли;
	
	Если Кэш.Ини.Конфигурация.Свойство("ХарактеристикиНоменклатуры") Тогда
		ИмяСправочникаХарактеристикиНоменклатуры = СокрЛП(Сред(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, Найти(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, ".")+1));
	Иначе
		ИмяСправочникаХарактеристикиНоменклатуры="ХарактеристикиНоменклатуры";
	КонецЕсли;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Форма = Справочники[ИмяСправочникаХарактеристикиНоменклатуры].ПолучитьФормуВыбора(,Элемент);
		Форма.ПараметрВыборПоВладельцу = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура;
    #Иначе
		П = Новый Структура();
		Если Лев(ИмяОтбораХарактеристики,6) = "Отбор." Тогда
			ИмяОтбора = Сред(ИмяОтбораХарактеристики, 7);
			П.Вставить("Отбор", Новый Структура(ИмяОтбора,Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура));
		Иначе
			П.Вставить(ИмяОтбораХарактеристики, Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура);
		КонецЕсли;
		Форма = ПолучитьФорму("Справочник." + ИмяСправочникаХарактеристикиНоменклатуры + ".ФормаВыбора", П, Элемент);
	#КонецЕсли
	Форма.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура СписокНоменклатурыЕдиницаEDIПриИзменении(Элемент)
	//ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные; 
	//ТекущаяСтрока.КоэффициентEDIВ1С	= 1;
	//УстановитьТекстПересчета();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстПересчета() 
	ВыбраннаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные; 
	
	Если ЗначениеЗаполнено(ВыбраннаяСтрока.ЕдиницаEDI) И ЗначениеЗаполнено(ВыбраннаяСтрока.ЕдиницаИзмерения) Тогда
		ВыбраннаяСтрока.Пересчет = "1 " + Строка(ВыбраннаяСтрока.ЕдиницаEDI) + " равен " + Строка(ВыбраннаяСтрока.КоэффициентEDIВ1С) + " " + Строка(ВыбраннаяСтрока.ЕдиницаИзмерения);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновным(Команда) 
	Для Каждого СтрокаТЧ из СписокНоменклатуры Цикл
		СтрокаТЧ.Основной = Ложь; 
	КонецЦикла;
	
	ТекСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ТекСтрока.Основной = Истина; 
		
	КонецЕсли; 
	
	ПроверитьНаличиеОсновнойНоменклатуры();	

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеОсновнойНоменклатуры()
	
	Если СписокНоменклатуры.Количество()>0 Тогда
		
		НайденнаяСтрока = Неопределено;
		Для Каждого СтрокаТЧ из СписокНоменклатуры Цикл
			Если СтрокаТЧ.Основной Тогда 
				НайденнаяСтрока=СтрокаТЧ;
			КонецЕсли;
			
		КонецЦикла;
		
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			СписокНоменклатуры[0].Основной = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСоответствие(Команда)
	
	стрКонтрагент = ВладелецФормы.Кэш.ОбщиеФункции.сбисЗаполнитьСтруктуруКонтрагента(Контрагент1С);
	
	
	Если НЕ ЗначениеЗаполнено(СопоставлениеНоменклатуры) Тогда
		ДанныеЗаполнения				= Новый Структура("НазваниеСБИС, КодСБИС",Наименование,КодКонтрагента);
		СопоставлениеНоменклатуры		= МодульОбъектаКлиент().НовыйСтрокаСопоставленияСБИСКлиент(ДанныеЗаполнения);	
	КонецЕсли;
	
	ДанныеЗаполнения					= Новый Структура("НазваниеСБИС, КодСБИС,АртикулСБИС, ИдентификаторСБИС, БазоваяЕдиницаОКЕИ, GTIN_СБИС, ЕдИзмСБИС, Номенклатура");
	ДанныеЗаполнения.Номенклатура		= Новый Массив; 
	ДанныеЗаполнения.ЕдИзмСБИС			= Новый Массив;
	ДанныеЗаполнения.НазваниеСБИС		= Наименование;
	ДанныеЗаполнения.КодСБИС			= КодКонтрагента;
	ДанныеЗаполнения.GTIN_СБИС			= GTIN;
	
	
	Для Каждого ЕдиницаСБИС ИЗ ЕдиницыИзмеренияСБИС Цикл
				
		ДанныеЗаполненияЕдиницы = Новый Структура("ЕдИзмНаименованиеСБИС, ОКЕИ_СБИС, КоэффициентСБИС");	
		ДанныеЗаполненияЕдиницы.ЕдИзмНаименованиеСБИС	= ЕдиницаСБИС.Название;
		ДанныеЗаполненияЕдиницы.ОКЕИ_СБИС				= ЕдиницаСБИС.ОКЕИ; 
		ДанныеЗаполненияЕдиницы.КоэффициентСБИС			= ЕдиницаСБИС.Коэффициент;		
		ДанныеЗаполнения.ЕдИзмСБИС.Добавить(ДанныеЗаполненияЕдиницы);
				
	КонецЦикла;
			
	Для Каждого СтрокаСписка Из СписокНоменклатуры Цикл
		
		ЕдиницыНоменклатуры				= ЕдиницыИзмерения1С.НайтиСтроки(Новый Структура("Владелец",СтрокаСписка.Номенклатура));	
		ДанныеЗаполненияНоменклатуры	= Новый Структура("Номенклатура, Идентификатор, Характеристика, ЕдИзм1С",
											СтрокаСписка.Номенклатура,, СтрокаСписка.ХарактеристикаНоменклатуры, Новый Массив);

		Для Каждого ЕдиницаИзмерения Из ЕдиницыНоменклатуры Цикл
				ДанныеЗаполненияЕдиницы = Новый Структура("ЕдИзм1С, ОКЕИ_1С, Коэффициент1С, ЕдИзмНаименование1С, Номенклатура");	
				ДанныеЗаполненияЕдиницы.ЕдИзм1С					= ЕдиницаИзмерения.Ссылка;
				ДанныеЗаполненияЕдиницы.ОКЕИ_1С					= ЕдиницаИзмерения.ОКЕИ; 
				ДанныеЗаполненияЕдиницы.Коэффициент1С			= ЕдиницаИзмерения.Коэффициент;
				ДанныеЗаполненияЕдиницы.ЕдИзмНаименование1С		= Строка(ЕдиницаИзмерения.Ссылка);
				ДанныеЗаполненияЕдиницы.Номенклатура			= ЕдиницаИзмерения.Владелец;
				ДанныеЗаполненияНоменклатуры.ЕдИзм1С.Добавить(ДанныеЗаполненияЕдиницы);
		КонецЦикла;
		
		ДанныеЗаполнения.Номенклатура.Добавить(ДанныеЗаполненияНоменклатуры);
			
	КонецЦикла;
	
	НовоеСопоставлениеНоменклатуры = МодульОбъектаКлиент().НовыйСтрокаСопоставленияСБИСКлиент(ДанныеЗаполнения);
	
	фрм = ВладелецФормы.Кэш.ГлавноеОкно.сбисНайтиФормуФункции("НоменклатураПоставщика_ЕдиничноеОбновление",ВладелецФормы.Кэш.ФормаРаботыСНоменклатурой);

	фрм.НоменклатураПоставщика_ЕдиничноеОбновление(Новый Структура("Номенклатура, Контрагент",НовоеСопоставлениеНоменклатуры, стрКонтрагент),
													Новый Структура("Кэш, ИсходноеСопоставление",ВладелецФормы.Кэш, СопоставлениеНоменклатуры));
		
	Закрыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АртикулКодНоменклатуры(Номенклатура)
	Результат =  Новый Структура("Артикул, Код");
	ЗаполнитьЗначенияСвойств(Результат,Номенклатура);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УстановитьОтборЕдиницы1С(ВыбранноеЗначение);
	АртикулКодНоменклатуры = АртикулКодНоменклатуры(ВыбранноеЗначение);
	Элемент.Родитель.ТекущиеДанные.Артикул = АртикулКодНоменклатуры.Артикул;
	Элемент.Родитель.ТекущиеДанные.Код = АртикулКодНоменклатуры.Код;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОКЕИКоэффициентЕдиницыИзмерения(Единица)
	Результат = Новый Структура("Код, Коэффициент");
	ЗаполнитьЗначенияСвойств(Результат, Единица);
    Возврат Результат;
КонецФункции

&НаКлиенте
Процедура УстановитьОтборЕдиницы1С(Владелец = Неопределено) 
	
	Если Владелец = Неопределено Тогда
		ТаблицаФормыНоменклатура = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "СписокНоменклатуры");
		Если НЕ ТаблицаФормыНоменклатура.ТекущиеДанные = Неопределено Тогда
			Владелец = ТаблицаФормыНоменклатура.ТекущиеДанные.Номенклатура;
		КонецЕсли;
	КонецЕсли;
		
	ТаблицаФормыЕдиницы = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "Таблица_ЕдиницыИзмерения1С");
	ТаблицаФормыЕдиницы.ОтборСтрок = Новый ФиксированнаяСтруктура("Владелец",Владелец ); 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки()
	
	УстановитьОтборЕдиницы1С();
 	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницыИзмерения1СЕдиницаИзмерения1CОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Тип") Тогда
		Возврат;
	КонецЕсли;	
	
	ОКЕИКоэффициент = ОКЕИКоэффициентЕдиницыИзмерения(ВыбранноеЗначение);
	Элемент.Родитель.ТекущиеДанные.ОКЕИ = ОКЕИКоэффициент.Код;
	Элемент.Родитель.ТекущиеДанные.Коэффициент = ОКЕИКоэффициент.Коэффициент;
	
	Если НЕ ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Владелец) Тогда
		ТаблицаФормыНоменклатура		= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "СписокНоменклатуры");
		Элемент.Родитель.ТекущиеДанные.Владелец	= ТаблицаФормыНоменклатура.ТекущиеДанные.Номенклатура;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Таблица_ЕдиницыИзмерения1СПередНачаломИзменения(Элемент, Отказ)
	Отказ = Элемент.ТекущиеДанные.Записана; //Если единица записана на онлайне, то ее нельзя изменить или удалить
КонецПроцедуры

