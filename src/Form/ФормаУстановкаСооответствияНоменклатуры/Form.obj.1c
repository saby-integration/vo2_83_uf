&НаКлиенте
Перем МестныйКэш Экспорт;

&НаСервере
Функция МодульОбъектаСервер()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаКлиенте
Функция МодульОбъектаКлиент() Экспорт
	Возврат ВладелецФормы.Кэш.СБИС.МодульОбъектаКлиент;
КонецФункции


// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции

&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция Показать(Кэш ,ПараметрыФормы) Экспорт
	МестныйКэш  = Кэш;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Попытка
			//Симонов И.В. 19.07.17 +				
			сбисУстановитьТипНоменклауры(Кэш.Ини.Конфигурация,Кэш,ЭтаФорма,ЭлементыФормы);
			//Симонов И.В. 19.07.17 -
			сбисУстановитьТипХарактеристики(Кэш.Ини.Конфигурация,Кэш,ЭтаФорма,ЭлементыФормы);
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		ЭлементыФормы.ТабличнаяЧасть.Колонки.Характеристика.Видимость=Ложь;
	#Иначе
		Попытка
			Если Кэш.Ини.Конфигурация.Свойство("Номенклатура") Тогда
				ИмяСправочникаНоменклатуры = СокрЛП(Сред(Кэш.Ини.Конфигурация.Номенклатура.Значение, Найти(Кэш.Ини.Конфигурация.Номенклатура.Значение, ".")+1));
				ТипСправочникаНоменклатуры = "СправочникСсылка."+ИмяСправочникаНоменклатуры;
			Иначе
				ТипСправочникаНоменклатуры = "СправочникСсылка.Номенклатура";
			КонецЕсли;
			ЭтаФорма.Элементы.СписокНоменклатурыНоменклатура.ОграничениеТипа = Новый ОписаниеТипов(ТипСправочникаНоменклатуры);
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		Попытка
			Если Кэш.Ини.Конфигурация.Свойство("ЕдиницаИзмерения") Тогда
				ИмяСправочникаЕдиницаИзмерения = СокрЛП(Сред(Кэш.Ини.Конфигурация.ЕдиницаИзмерения.Значение, Найти(Кэш.Ини.Конфигурация.ЕдиницаИзмерения.Значение, ".")+1));
				ТипСправочникаЕдиницаИзмерения = "СправочникСсылка."+ИмяСправочникаЕдиницаИзмерения;
			Иначе
				ТипСправочникаЕдиницаИзмерения = "СправочникСсылка.КлассификаторЕдиницИзмерения";
			КонецЕсли;
			ЭтаФорма.Элементы.СписокНоменклатурыЕдиницаИзмерения.ОграничениеТипа = Новый ОписаниеТипов(ТипСправочникаЕдиницаИзмерения);
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
		//ЭтаФорма.Элементы.СписокНоменклатурыХарактеристикаНоменклатуры.Видимость=Ложь;
		Если Кэш.Ини.Конфигурация.Свойство("ИмяОтбораХарактеристики") Тогда
			ИмяОтбораХарактеристики = СокрЛП(СтрЗаменить(Кэш.Ини.Конфигурация.ИмяОтбораХарактеристики.Значение,"'", ""));
		Иначе
			ИмяОтбораХарактеристики = "Номенклатура";
		КонецЕсли;
	#КонецЕсли
	
	
	Контрагент1С = ПараметрыФормы.Контрагент;
	
	СписокНоменклатуры.Очистить();
	ЕдиницыИзмеренияКонтрагента.Очистить();
	Наименование	= ""; 
	КодКонтрагента	= "";
	
	Если ПараметрыФормы.Свойство("СопоставлениеНоменклатуры") Тогда 
			
		Наименование	= ПараметрыФормы.СопоставлениеНоменклатуры.НоменклатураСБИС.Наименование;
		КодКонтрагента	= ПараметрыФормы.СопоставлениеНоменклатуры.НоменклатураСБИС.Код;

		Для Каждого Номенклатура1С Из ПараметрыФормы.СопоставлениеНоменклатуры.Номенклатура1С Цикл
			Для Каждого Единица1С Из Номенклатура1С.Значение.Единицы Цикл  
				СтрокаСписка = СписокНоменклатуры.Добавить();
				СтрокаСписка.Номенклатура = Номенклатура1С.Ключ;
				ЗаполнитьЗначенияСвойств(СтрокаСписка,Единица1С.Значение);
				СтрокаСписка.ЕдиницаИзмерения = Единица1С.Значение.Ссылка;
			КонецЦикла;	
		КонецЦикла;
		
		Для Каждого ЕдиницаСБИС Из ПараметрыФормы.СопоставлениеНоменклатуры.НоменклатураСБИС.Единицы Цикл
			  
			ЕдиницаКонтрагента = ЕдиницыИзмеренияКонтрагента.Добавить();
			ЗаполнитьЗначенияСвойств(ЕдиницаКонтрагента,ЕдиницаСБИС.Значение);
					
		КонецЦикла;
		
		СопоставлениеНоменклатуры = ПараметрыФормы.СопоставлениеНоменклатуры; //Экземпляр класса 
		ЗаполнитьАртикулКод();
	КонецЕсли;
	
	////Отладка метода 
	//фрм = ВладелецФормы.Кэш.ГлавноеОкно.сбисНайтиФормуФункции("НоменклатураПоставщика_ЕдиничныйПоиск",МестныйКэш.ФормаРаботыСНоменклатурой); 
	////	

	//стрКонтрагент = Кэш.ГлавноеОкно.сбисПолучитьФорму("РаботаСДокументами1С").сбисЗаполнитьСтруктуруКонтрагента(Контрагент1С);	 
	////
	////СопоставлениеНоменклатуры.НоменклатураСБИС.Код = "";
	//Соответствия = фрм.НоменклатураПоставщика_ЕдиничныйПоиск(Новый Структура("Найти, Контрагент", СопоставлениеНоменклатуры, стрКонтрагент),Новый Структура("Кэш", Кэш));
	////	
	Если Не ЭтаФорма.Открыта() Тогда
		ЭтаФорма.Открыть();
	КонецЕсли;
	//
КонецФункции	
 
Процедура ЗаполнитьАртикулКод()
	Для Каждого СтрокаСписка Из СписокНоменклатуры Цикл
		СтрокаСписка.Артикул = СтрокаСписка.Номенклатура.Артикул;
		СтрокаСписка.Код = СтрокаСписка.Номенклатура.Код;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СписокНоменклатурыПересчет" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
		
		ПараметрыФормы = Новый Структура;
				
		ПараметрыФормы.Вставить("ЕдиницаEDI"					, ТекущаяСтрока.ЕдиницаEDI);
		ПараметрыФормы.Вставить("ЕдиницаИзмерения"				, ТекущаяСтрока.ЕдиницаИзмерения);
		ПараметрыФормы.Вставить("КоэффициентEDIВ1С"				, ТекущаяСтрока.КоэффициентEDIВ1С);
		
		ДополнительныеПараметры = Новый Структура("ТекущаяСтрока", ТекущаяСтрока);
		
		ФормаУстановкаСооответствия = сбисПолучитьФорму("ФормаПересчетаЕдиницEDI_В_1С");		
		ФормаУстановкаСооответствия.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработчикПослеВведенияПересчета",ЭтаФорма,ДополнительныеПараметры);
        ФормаУстановкаСооответствия.Показать(ПараметрыФормы);		
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеВведенияПересчета(Результат, ДопПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		ВыбраннаяСтрока = ДопПараметры.ТекущаяСтрока;
		
		ВыбраннаяСтрока.КоэффициентEDIВ1С	= Результат.КоэффициентEDIВ1С;
		  		
        УстановитьТекстПересчета();
		
	КонецЕсли;	

КонецПроцедуры        

&НаКлиенте
Процедура КоманднаяПанельСоответствующейНоменклатурыУдалить(Команда)
	
	Если Элементы.СписокНоменклатуры.ТекущиеДанные<>Неопределено Тогда 
		СписокНоменклатуры.Удалить(Элементы.СписокНоменклатуры.ТекущиеДанные);
	Иначе
		Сообщить("Выберите строку соответствия для удаления");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыЕдиницаИзмеренияПриИзменении(Элемент)
	//ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	//ТекущаяСтрока.КоэффициентEDIВ1С	= 1;
	//УстановитьТекстПересчета();
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыХарактеристикаНоменклатурыНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если Не ЗначениеЗаполнено(сбисЭлементФормы(ЭтаФорма,"СписокНоменклатуры").ТекущиеДанные.Номенклатура) Тогда
		Сообщить("Заполните номенклатуру");
	КонецЕсли;
	
	Если Кэш.Ини.Конфигурация.Свойство("ХарактеристикиНоменклатуры") Тогда
		ИмяСправочникаХарактеристикиНоменклатуры = СокрЛП(Сред(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, Найти(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, ".")+1));
	Иначе
		ИмяСправочникаХарактеристикиНоменклатуры="ХарактеристикиНоменклатуры";
	КонецЕсли;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Форма = Справочники[ИмяСправочникаХарактеристикиНоменклатуры].ПолучитьФормуВыбора(,Элемент);
		Форма.ПараметрВыборПоВладельцу = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура;
    #Иначе
		П = Новый Структура();
		Если Лев(ИмяОтбораХарактеристики,6) = "Отбор." Тогда
			ИмяОтбора = Сред(ИмяОтбораХарактеристики, 7);
			П.Вставить("Отбор", Новый Структура(ИмяОтбора,Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура));
		Иначе
			П.Вставить(ИмяОтбораХарактеристики, Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура);
		КонецЕсли;
		Форма = ПолучитьФорму("Справочник." + ИмяСправочникаХарактеристикиНоменклатуры + ".ФормаВыбора", П, Элемент);
	#КонецЕсли
	Форма.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура СписокНоменклатурыЕдиницаEDIПриИзменении(Элемент)
	//ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные; 
	//ТекущаяСтрока.КоэффициентEDIВ1С	= 1;
	//УстановитьТекстПересчета();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстПересчета() 
	ВыбраннаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные; 
	
	Если ЗначениеЗаполнено(ВыбраннаяСтрока.ЕдиницаEDI) И ЗначениеЗаполнено(ВыбраннаяСтрока.ЕдиницаИзмерения) Тогда
		ВыбраннаяСтрока.Пересчет = "1 " + Строка(ВыбраннаяСтрока.ЕдиницаEDI) + " равен " + Строка(ВыбраннаяСтрока.КоэффициентEDIВ1С) + " " + Строка(ВыбраннаяСтрока.ЕдиницаИзмерения);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновным(Команда) 
	Для Каждого СтрокаТЧ из СписокНоменклатуры Цикл
		СтрокаТЧ.Основной = Ложь; 
	КонецЦикла;
	
	ТекСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ТекСтрока.Основной = Истина; 
		
	КонецЕсли; 
	
	ПроверитьНаличиеОсновнойНоменклатуры();	

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеОсновнойНоменклатуры()
	
	Если СписокНоменклатуры.Количество()>0 Тогда
		
		НайденнаяСтрока = Неопределено;
		Для Каждого СтрокаТЧ из СписокНоменклатуры Цикл
			Если СтрокаТЧ.Основной Тогда 
				НайденнаяСтрока=СтрокаТЧ;
			КонецЕсли;
			
		КонецЦикла;
		
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			СписокНоменклатуры[0].Основной = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСоответствие(Команда)
	
	стрКонтрагент = ВладелецФормы.Кэш.ГлавноеОкно.сбисПолучитьФорму("РаботаСДокументами1С").сбисЗаполнитьСтруктуруКонтрагента(Контрагент1С);
	
	Если НЕ ЗначениеЗаполнено(СопоставлениеНоменклатуры) Тогда
		ДанныеЗаполнения				= Новый Структура("НазваниеСБИС, КодСБИС",Наименование,КодКонтрагента);
		СопоставлениеНоменклатуры		= МодульОбъектаКлиент().НовыйСтрокаСопоставленияСБИССервер(ДанныеЗаполнения);	
	КонецЕсли;
	
	//Отберем строки для удаления	
	Для Каждого Номенклатура1С Из СопоставлениеНоменклатуры.Номенклатура1С Цикл
		
		Для Каждого Единица1С Из Номенклатура1С.Значение.Единицы Цикл
			
			НайденныеСтроки = СписокНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения",Номенклатура1С.Ключ,Единица1С.Ключ));
			
			Если НЕ НайденныеСтроки.Количество() Тогда
				// Номенклатура/Единица была в сопоставлении, но пользователь ее удалил					
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла; 

	//отберем добавленные строки
	НовыеСопоставления = Новый Соответствие;
	Для Каждого СтрокаСписка Из СписокНоменклатуры Цикл
		
		Номенклатура1С = СопоставлениеНоменклатуры.Номенклатура1С.Получить(СтрокаСписка.Номенклатура);				
		
		Если НЕ Номенклатура1С = Неопределено Тогда
			Если НЕ Номенклатура1С.Единицы.Получить(СтрокаСписка.ЕдиницаИзмерения) = Неопределено Тогда
				Продолжить; //Пара Номенклатура/Единица уже была, сохранять не нужно	
			КонецЕсли;
		КонецЕсли;
		
		СтрокаСопоставления = НовыеСопоставления.Получить(СтрокаСписка.Номенклатура); 
		
		Если СтрокаСопоставления = Неопределено Тогда
			
			МассивСопоставлений = Новый Массив;
			МассивСопоставлений.Добавить(СтрокаСписка);
			НовыеСопоставления.Вставить(СтрокаСписка.Номенклатура, МассивСопоставлений);
			
		Иначе
			СтрокаСопоставления.Добавить(СтрокаСписка);
		КонецЕсли;

		
	КонецЦикла;
	
		
	Если НовыеСопоставления.Количество() Тогда //Если есть новые сопоставления, создадим новый класс с ними и вызовем запись
		
		фрм = ВладелецФормы.Кэш.ГлавноеОкно.сбисНайтиФормуФункции("КлючНоменклатурыСопоставления",ВладелецФормы.Кэш.ФормаРаботыСНоменклатурой);
		
		ДанныеЗаполнения				= Новый Структура("НазваниеСБИС, КодСБИС,АртикулСБИС, ИдентификаторСБИС, БазоваяЕдиницаОКЕИ, GTIN_СБИС, ЕдИзмСБИС, Номенклатура");
		ДанныеЗаполнения.ЕдИзмСБИС		= Новый Массив;	
		ДанныеЗаполнения.Номенклатура	= Новый Массив;
		
		ДанныеЗаполнения.НазваниеСБИС		= СопоставлениеНоменклатуры.НоменклатураСБИС.Наименование;
		ДанныеЗаполнения.КодСБИС			= СопоставлениеНоменклатуры.НоменклатураСБИС.Код;
		ДанныеЗаполнения.БазоваяЕдиницаОКЕИ = СопоставлениеНоменклатуры.БазоваяЕдиницаОКЕИ;	
		ДанныеЗаполнения.GTIN_СБИС			= СопоставлениеНоменклатуры.НоменклатураСБИС.GTIN;
			
		Для Каждого ЕдиницаИзмерения ИЗ ЕдиницыИзмеренияКонтрагента Цикл
			
			ДанныеЗаполненияЕдиницы = Новый Структура("ЕдИзмНаименованиеСБИС, ОКЕИ_СБИС, КоэффициентСБИС");	
			ДанныеЗаполненияЕдиницы.ЕдИзмНаименованиеСБИС	= ЕдиницаИзмерения.Название;
			ДанныеЗаполненияЕдиницы.ОКЕИ_СБИС				= ЕдиницаИзмерения.ОКЕИ; 
			ДанныеЗаполненияЕдиницы.КоэффициентСБИС			= ЕдиницаИзмерения.Коэффициент;		
			ДанныеЗаполнения.ЕдИзмСБИС.Добавить(ДанныеЗаполненияЕдиницы);
			
		КонецЦикла;

		
		Для Каждого КлючЗначение Из НовыеСопоставления Цикл
			
			//Переделать на единый механизм получения ИД номенклатуры 1С
			КлючНоменклатуры = фрм.КлючНоменклатурыСопоставления(КлючЗначение.Ключ,Новый Структура("РеквизитСопоставленияНоменклатуры",ВладелецФормы.Кэш.Парам.РеквизитСопоставленияНоменклатуры));
			ДанныеЗаполненияНоменклатуры = Новый Структура("Номенклатура, Идентификатор, ЕдИзм1С",КлючЗначение.Ключ, КлючНоменклатуры, Новый Массив);
			
			Для Каждого СтрокаТаблицы Из КлючЗначение.Значение Цикл
				
				ДанныеЗаполненияЕдиницы = Новый Структура("ЕдИзм1С, ОКЕИ_1С, Коэффициент1С, ЕдИзмНаименование1С, Номенклатура");	
				ДанныеЗаполненияЕдиницы.ЕдИзм1С				= СтрокаТаблицы.ЕдиницаИзмерения;
				ДанныеЗаполненияЕдиницы.ОКЕИ_1С				= СтрокаТаблицы.ОКЕИ; 
				ДанныеЗаполненияЕдиницы.Коэффициент1С		= СтрокаТаблицы.Коэффициент;
				ДанныеЗаполненияЕдиницы.ЕдИзмНаименование1С	= Строка(СтрокаТаблицы.ЕдиницаИзмерения);
				ДанныеЗаполненияЕдиницы.Номенклатура		= КлючЗначение.Ключ;
				ДанныеЗаполненияНоменклатуры.ЕдИзм1С.Добавить(ДанныеЗаполненияЕдиницы);
			
			КонецЦикла;
			
			ДанныеЗаполнения.Номенклатура.Добавить(ДанныеЗаполненияНоменклатуры);
			
		КонецЦикла;
		
		СопоставленияСБИСЗаписать = МодульОбъектаКлиент().НовыйСтрокаСопоставленияСБИСКлиент(ДанныеЗаполнения);
		МассивСопоставленийСБИС = Новый Массив;
		МассивСопоставленийСБИС.Добавить(СопоставленияСБИСЗаписать);
		фрм.НоменклатураПоставщика_МассовоеОбновление(Новый Структура("Номенклатура, Контрагент", МассивСопоставленийСБИС, стрКонтрагент), Новый Структура("Кэш",ВладелецФормы.Кэш));

	КонецЕсли;
		
	//Закрыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АртикулКодНоменклатуры(Номенклатура)
	Результат =  Новый Структура("Артикул, Код");
	ЗаполнитьЗначенияСвойств(Результат,Номенклатура);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АртикулКодНоменклатуры = АртикулКодНоменклатуры(ВыбранноеЗначение);
	Элемент.Родитель.ТекущиеДанные.Артикул = АртикулКодНоменклатуры.Артикул;
	Элемент.Родитель.ТекущиеДанные.Код = АртикулКодНоменклатуры.Код;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыЕдиницаИзмеренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОКЕИКоэффициент = ОКЕИКоэффициентЕдиницыИзмерения(ВыбранноеЗначение);
	Элемент.Родитель.ТекущиеДанные.ОКЕИ = ОКЕИКоэффициент.Код;
	Элемент.Родитель.ТекущиеДанные.Коэффициент = ОКЕИКоэффициент.Коэффициент;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОКЕИКоэффициентЕдиницыИзмерения(Единица)
	Результат = Новый Структура("Код, Коэффициент");
	ЗаполнитьЗначенияСвойств(Результат, Единица);
    Возврат Результат;
КонецФункции

